buildscript {
	ext {
		springBootVersion = '2.0.5.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.2")
	}
}

//
// coveralls plugin
apply plugin: 'com.github.kt3k.coveralls'

allprojects {
	apply plugin: 'jacoco'

	repositories {
		mavenCentral()
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'idea'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	group = 'io.openindoormap'
	version = '0.1.0'
	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	//
	// jacoco
	jacocoTestReport {
	    reports {
	        xml.enabled = true // coveralls plugin depends on xml format report
	        html.enabled = true
	    }
	}

dependencies {
	compileOnly('org.projectlombok:lombok:1.18.2')
	testCompile('org.springframework.boot:spring-boot-starter-test')

	compile("org.springframework.boot:spring-boot-devtools")
}
}

task jacocoRootReport(type: JacocoReport) {
    dependsOn = subprojects.jacocoTestReport
    sourceDirectories = files(subprojects.sourceSets.main.allSource.srcDirs)
	additionalSourceDirs = files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories =  files(subprojects.sourceSets.main.output)
    executionData = files(subprojects.jacocoTestReport.executionData)
	reports {
		xml.enabled = true
		html.enabled = true
	}
}

coveralls {
    sourceDirs = subprojects.sourceSets.main.allSource.srcDirs.flatten()
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"
}

tasks.coveralls {
    dependsOn jacocoRootReport
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.8' // 원하는 Gradle 버전 명시
}

project(':oim-user') {
    dependencies {
        compile project(':oim-core')
    }
}